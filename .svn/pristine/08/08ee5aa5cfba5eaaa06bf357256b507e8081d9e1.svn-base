package com.bochat.app.model.greendao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.bochat.app.model.bean.FriendApplyEntity;
import com.bochat.app.model.bean.FriendEntity;
import com.bochat.app.model.bean.GroupApplyEntity;
import com.bochat.app.model.bean.GroupEntity;
import com.bochat.app.model.bean.GroupManagerEntity;
import com.bochat.app.model.bean.GroupMemberEntity;
import com.bochat.app.model.bean.RedPacketStatuEntity;
import com.bochat.app.model.bean.SpeedConverStatusEntity;
import com.bochat.app.model.bean.UserEntity;
import com.bochat.app.model.bean.GroupApplyServerEntity;

import com.bochat.app.model.greendao.FriendApplyEntityDao;
import com.bochat.app.model.greendao.FriendEntityDao;
import com.bochat.app.model.greendao.GroupApplyEntityDao;
import com.bochat.app.model.greendao.GroupEntityDao;
import com.bochat.app.model.greendao.GroupManagerEntityDao;
import com.bochat.app.model.greendao.GroupMemberEntityDao;
import com.bochat.app.model.greendao.RedPacketStatuEntityDao;
import com.bochat.app.model.greendao.SpeedConverStatusEntityDao;
import com.bochat.app.model.greendao.UserEntityDao;
import com.bochat.app.model.greendao.GroupApplyServerEntityDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig friendApplyEntityDaoConfig;
    private final DaoConfig friendEntityDaoConfig;
    private final DaoConfig groupApplyEntityDaoConfig;
    private final DaoConfig groupEntityDaoConfig;
    private final DaoConfig groupManagerEntityDaoConfig;
    private final DaoConfig groupMemberEntityDaoConfig;
    private final DaoConfig redPacketStatuEntityDaoConfig;
    private final DaoConfig speedConverStatusEntityDaoConfig;
    private final DaoConfig userEntityDaoConfig;
    private final DaoConfig groupApplyServerEntityDaoConfig;

    private final FriendApplyEntityDao friendApplyEntityDao;
    private final FriendEntityDao friendEntityDao;
    private final GroupApplyEntityDao groupApplyEntityDao;
    private final GroupEntityDao groupEntityDao;
    private final GroupManagerEntityDao groupManagerEntityDao;
    private final GroupMemberEntityDao groupMemberEntityDao;
    private final RedPacketStatuEntityDao redPacketStatuEntityDao;
    private final SpeedConverStatusEntityDao speedConverStatusEntityDao;
    private final UserEntityDao userEntityDao;
    private final GroupApplyServerEntityDao groupApplyServerEntityDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        friendApplyEntityDaoConfig = daoConfigMap.get(FriendApplyEntityDao.class).clone();
        friendApplyEntityDaoConfig.initIdentityScope(type);

        friendEntityDaoConfig = daoConfigMap.get(FriendEntityDao.class).clone();
        friendEntityDaoConfig.initIdentityScope(type);

        groupApplyEntityDaoConfig = daoConfigMap.get(GroupApplyEntityDao.class).clone();
        groupApplyEntityDaoConfig.initIdentityScope(type);

        groupEntityDaoConfig = daoConfigMap.get(GroupEntityDao.class).clone();
        groupEntityDaoConfig.initIdentityScope(type);

        groupManagerEntityDaoConfig = daoConfigMap.get(GroupManagerEntityDao.class).clone();
        groupManagerEntityDaoConfig.initIdentityScope(type);

        groupMemberEntityDaoConfig = daoConfigMap.get(GroupMemberEntityDao.class).clone();
        groupMemberEntityDaoConfig.initIdentityScope(type);

        redPacketStatuEntityDaoConfig = daoConfigMap.get(RedPacketStatuEntityDao.class).clone();
        redPacketStatuEntityDaoConfig.initIdentityScope(type);

        speedConverStatusEntityDaoConfig = daoConfigMap.get(SpeedConverStatusEntityDao.class).clone();
        speedConverStatusEntityDaoConfig.initIdentityScope(type);

        userEntityDaoConfig = daoConfigMap.get(UserEntityDao.class).clone();
        userEntityDaoConfig.initIdentityScope(type);

        groupApplyServerEntityDaoConfig = daoConfigMap.get(GroupApplyServerEntityDao.class).clone();
        groupApplyServerEntityDaoConfig.initIdentityScope(type);

        friendApplyEntityDao = new FriendApplyEntityDao(friendApplyEntityDaoConfig, this);
        friendEntityDao = new FriendEntityDao(friendEntityDaoConfig, this);
        groupApplyEntityDao = new GroupApplyEntityDao(groupApplyEntityDaoConfig, this);
        groupEntityDao = new GroupEntityDao(groupEntityDaoConfig, this);
        groupManagerEntityDao = new GroupManagerEntityDao(groupManagerEntityDaoConfig, this);
        groupMemberEntityDao = new GroupMemberEntityDao(groupMemberEntityDaoConfig, this);
        redPacketStatuEntityDao = new RedPacketStatuEntityDao(redPacketStatuEntityDaoConfig, this);
        speedConverStatusEntityDao = new SpeedConverStatusEntityDao(speedConverStatusEntityDaoConfig, this);
        userEntityDao = new UserEntityDao(userEntityDaoConfig, this);
        groupApplyServerEntityDao = new GroupApplyServerEntityDao(groupApplyServerEntityDaoConfig, this);

        registerDao(FriendApplyEntity.class, friendApplyEntityDao);
        registerDao(FriendEntity.class, friendEntityDao);
        registerDao(GroupApplyEntity.class, groupApplyEntityDao);
        registerDao(GroupEntity.class, groupEntityDao);
        registerDao(GroupManagerEntity.class, groupManagerEntityDao);
        registerDao(GroupMemberEntity.class, groupMemberEntityDao);
        registerDao(RedPacketStatuEntity.class, redPacketStatuEntityDao);
        registerDao(SpeedConverStatusEntity.class, speedConverStatusEntityDao);
        registerDao(UserEntity.class, userEntityDao);
        registerDao(GroupApplyServerEntity.class, groupApplyServerEntityDao);
    }
    
    public void clear() {
        friendApplyEntityDaoConfig.getIdentityScope().clear();
        friendEntityDaoConfig.getIdentityScope().clear();
        groupApplyEntityDaoConfig.getIdentityScope().clear();
        groupEntityDaoConfig.getIdentityScope().clear();
        groupManagerEntityDaoConfig.getIdentityScope().clear();
        groupMemberEntityDaoConfig.getIdentityScope().clear();
        redPacketStatuEntityDaoConfig.getIdentityScope().clear();
        speedConverStatusEntityDaoConfig.getIdentityScope().clear();
        userEntityDaoConfig.getIdentityScope().clear();
        groupApplyServerEntityDaoConfig.getIdentityScope().clear();
    }

    public FriendApplyEntityDao getFriendApplyEntityDao() {
        return friendApplyEntityDao;
    }

    public FriendEntityDao getFriendEntityDao() {
        return friendEntityDao;
    }

    public GroupApplyEntityDao getGroupApplyEntityDao() {
        return groupApplyEntityDao;
    }

    public GroupEntityDao getGroupEntityDao() {
        return groupEntityDao;
    }

    public GroupManagerEntityDao getGroupManagerEntityDao() {
        return groupManagerEntityDao;
    }

    public GroupMemberEntityDao getGroupMemberEntityDao() {
        return groupMemberEntityDao;
    }

    public RedPacketStatuEntityDao getRedPacketStatuEntityDao() {
        return redPacketStatuEntityDao;
    }

    public SpeedConverStatusEntityDao getSpeedConverStatusEntityDao() {
        return speedConverStatusEntityDao;
    }

    public UserEntityDao getUserEntityDao() {
        return userEntityDao;
    }

    public GroupApplyServerEntityDao getGroupApplyServerEntityDao() {
        return groupApplyServerEntityDao;
    }

}
