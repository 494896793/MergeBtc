package com.bochat.app.app.adapter;

import android.annotation.SuppressLint;
import android.content.Context;
import android.support.annotation.NonNull;
import android.support.v4.view.PagerAdapter;
import android.support.v4.view.ViewPager;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;

import com.bochat.app.R;
import com.bochat.app.app.util.ResourceUtils;
import com.bochat.app.app.view.SpImageView;
import com.bochat.app.common.contract.dynamic.DynamicContract;
import com.bochat.app.model.bean.DynamicAdapterBannerEntity;
import com.bochat.app.model.bean.DynamicBannerEntity;
import com.bochat.app.model.bean.ViewPagerItemJumpEntity;
import com.bochat.app.model.util.GlideRoundTransform;
import com.bumptech.glide.Glide;
import com.bumptech.glide.load.resource.bitmap.CenterCrop;
import com.bumptech.glide.request.RequestOptions;

import java.util.ArrayList;
import java.util.List;

import static com.bochat.app.model.constant.Constan.VIEWPAGER_JUMP_KEY;

/**
 * 2019/5/8
 * Author LDL
 **/
public class DynamicViewPagerAdapter extends PagerAdapter implements View.OnClickListener {

    private List<DynamicBannerEntity> list=new ArrayList<>();
    private Context mContext;
    private List<ImageView> viewList=new ArrayList<>();
    private OnPagerClick onPagerClick;

    public void setOnPagerClick(OnPagerClick onPagerClick){
        this.onPagerClick=onPagerClick;
    }

    public DynamicViewPagerAdapter(List<DynamicBannerEntity> list, Context mContext){
        this.list.addAll(list);
        if(this.list!=null&&this.list.size()!=0){
            while (this.list.size()<4){
                this.list.addAll(list);
            }
        }
        this.mContext=mContext;
        if(this.list!=null){
            for(int i=0;i<this.list.size();i++){
                ImageView imageView=new ImageView(mContext);
//                imageView.setType(SpImageView.TYPE_ROUND);
//                imageView.setRoundRadius(ResourceUtils.dip2px(mContext,R.dimen.dp_4));
                imageView.setOnClickListener(this);
                ViewGroup.LayoutParams layoutParams=new ViewGroup.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT,ViewGroup.LayoutParams.MATCH_PARENT);
                imageView.setLayoutParams(layoutParams);
                imageView.setScaleType(ImageView.ScaleType.FIT_XY);
                Glide.with(mContext).load(this.list.get(i).getImage()).transform(new CenterCrop(),new GlideRoundTransform(mContext)).into(imageView);
                imageView.setTag(new ViewPagerItemJumpEntity(i+"",true,true));
                viewList.add(imageView);
            }
        }
    }

    public List<ImageView> getViewList(){
        return viewList;
    }

    public DynamicViewPagerAdapter(Context mContext,List<DynamicAdapterBannerEntity> list){
        this.mContext=mContext;
        if(list!=null){
            for(int i=0;i<list.size();i++){
                DynamicBannerEntity dynamicBannerEntity=new DynamicBannerEntity();
                dynamicBannerEntity.setSourceId(list.get(i).getSourceId());
                dynamicBannerEntity.setTitle(list.get(i).getTitle());
                dynamicBannerEntity.setImage(list.get(i).getImgUrl());
                this.list.add(dynamicBannerEntity);
            }
            for(int i=0;i<list.size();i++){
                SpImageView imageView=new SpImageView(mContext);
                imageView.setType(SpImageView.TYPE_ROUND);
                imageView.setRoundRadius(ResourceUtils.dip2px(mContext,R.dimen.dp_4));
                if(list.get(i).getTitle()!=null&&list.get(i).getTitle().equals("更多精彩")){
                    imageView.setTag(new ViewPagerItemJumpEntity(i+"",false,false));
                }else{
                    imageView.setTag(new ViewPagerItemJumpEntity(i+"",false,true));
                }
                imageView.setOnClickListener(this);
                ViewGroup.LayoutParams layoutParams=new ViewGroup.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT,ViewGroup.LayoutParams.MATCH_PARENT);
                imageView.setLayoutParams(layoutParams);
                imageView.setImageResource(list.get(i).getSourceId());
                viewList.add(imageView);
            }
        }
    }

    @Override
    public int getCount() {
//        return viewList.size();
        return Integer.MAX_VALUE;
    }

    @Override
    public boolean isViewFromObject(@NonNull View view, @NonNull Object object) {
        return view==object;
    }

    @Override
    public void destroyItem(@NonNull ViewGroup container, int position, @NonNull Object object) {
//        ((ViewPager)container).removeView(viewList.get(position));
        Log.i("=====","========viewpager adapter destroyItem->"+position%viewList.size());
        ((ViewPager)container).removeView(viewList.get(position%viewList.size()));
    }

    @NonNull
    @Override
    public Object instantiateItem(@NonNull ViewGroup container, int position) {

        ((ViewPager)container).addView(viewList.get(position%viewList.size()));
//        ((ViewPager)container).addView(viewList.get(position));
//        return viewList.get(position);
        Log.i("=====","========viewpager adapter instantiateItem->"+position%viewList.size());
        return viewList.get(position%viewList.size());
    }

    @Override
    public void onClick(View v) {
        if(onPagerClick!=null){
            Object object=v.getTag();
            ViewPagerItemJumpEntity a=(ViewPagerItemJumpEntity) v.getTag();
            onPagerClick.onPageItemClick(Integer.valueOf(((ViewPagerItemJumpEntity) v.getTag()).index),list.get(Integer.valueOf(((ViewPagerItemJumpEntity) v.getTag()).index)), (ViewPagerItemJumpEntity) v.getTag());
        }
    }

    interface OnPagerClick{
        void onPageItemClick(int position, DynamicBannerEntity entity, ViewPagerItemJumpEntity jumpEntity);
    }

}
