package com.bochat.app.app.fragment.dynamic;

import android.os.Bundle;
import android.support.v7.widget.LinearLayoutManager;
import android.support.v7.widget.RecyclerView;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Toast;

import com.bochat.app.R;
import com.bochat.app.app.adapter.DynamicAdapter;
import com.bochat.app.app.view.BoChatTopBar;
import com.bochat.app.common.contract.dynamic.DynamicContract;
import com.bochat.app.common.router.Router;
import com.bochat.app.common.router.RouterDynamicNotice;
import com.bochat.app.common.router.RouterDynamicProjectIdentification;
import com.bochat.app.common.router.RouterDynamicProjectIdentificationResult;
import com.bochat.app.common.router.RouterDynamicShakyCenter;
import com.bochat.app.common.router.RouterDynamicViewSpot;
import com.bochat.app.common.router.RouterDynamicWebView;
import com.bochat.app.common.router.RouterDynamitAppList;
import com.bochat.app.common.router.RouterFastSpeed;
import com.bochat.app.common.router.RouterQuickExchangeHall;
import com.bochat.app.model.bean.DynamicAdapterEntity;
import com.bochat.app.model.bean.DynamicBannerEntity;
import com.bochat.app.model.bean.DynamicTopShopEntity;
import com.bochat.app.model.bean.GameGoEntity;
import com.bochat.app.model.bean.ProjectIdentificationEntity;
import com.bochat.app.model.bean.ViewPagerItemJumpEntity;
import com.bochat.app.mvp.view.BaseFragment;

import java.util.ArrayList;
import java.util.List;

import javax.inject.Inject;

import butterknife.BindView;

/**
 * 2019/5/7
 * Author LDL
 **/
public class DynamicFragment extends BaseFragment<DynamicContract.Presenter> implements DynamicContract.View , DynamicAdapter.OnViewpagerItemClick, DynamicAdapter.OnGridViewItemClick
        , DynamicAdapter.OnAppTitleClickListenner, DynamicAdapter.OnNoticeClick {

    @Inject
    DynamicContract.Presenter presenter;

    @BindView(R.id.bochat_topbar)
    BoChatTopBar bochat_topbar;

    @BindView(R.id.recyclerview)
    RecyclerView recyclerview;

    DynamicAdapter adapter;
    ProjectIdentificationEntity projectIdentificationEntity;

    @Override
    protected void initInjector() {
        getFragmentComponent().inject(this);
    }

    @Override
    protected DynamicContract.Presenter initPresenter() {
        return presenter;
    }

    private GameGoEntity gameGoEntity;

    @Override
    protected View getRootView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
        View view=inflater.inflate(R.layout.fragment_dynamic,null);
        return view;
    }

    @Override
    protected void initWidget() {
        bochat_topbar.setTitleText("动态");
        bochat_topbar.setRightButtonInvisble(true);

        adapter=new DynamicAdapter(new ArrayList<DynamicAdapterEntity>(),getActivity());
        adapter.setOnGridViewItemClick(this);
        adapter.setOnViewpagerItemClick(this);
        adapter.setOnNoticeClick(this);
        adapter.setOnAppTitleClickListenner(this);
        recyclerview.setLayoutManager(new LinearLayoutManager(getActivity(),LinearLayoutManager.VERTICAL,false));
        recyclerview.setAdapter(adapter);
    }

    @Override
    public void refreshData(List<DynamicAdapterEntity> entity) {
        if(entity!=null){
            adapter.refreshData(entity);
        }
    }

    @Override
    public void getProjectStatuSuccess(ProjectIdentificationEntity entity) {
        projectIdentificationEntity=entity;
        presenter.loadData(4);
    }

    @Override
    public void gameGoLogin(GameGoEntity entity) {
        gameGoEntity=entity;
    }

    @Override
    public void onItemClick(int position, DynamicBannerEntity entity, ViewPagerItemJumpEntity jumpEntity) {
        if(jumpEntity.linkJump){
            boolean isShare=false;
            if(entity.getIsShare().equals("1")){
                isShare=true;
            }
            Router.navigation(new RouterDynamicWebView(entity.getLink(), true, entity.getTitle()));
        }else{
            if(jumpEntity.isJump){
                Router.navigation(new RouterQuickExchangeHall());
            }else{
                Toast.makeText(getActivity(),"暂未开通",Toast.LENGTH_SHORT).show();
            }
        }
    }

    @Override
    public void onItemClick(int position, DynamicTopShopEntity entity) {
        if(entity.getName().equals(getString(R.string.exchange))){
            Router.navigation(new RouterQuickExchangeHall());
        }else if(entity.getName().equals(getString(R.string.view_look))){
            Router.navigation(new RouterDynamicViewSpot());
        }else if(entity.getName().equals(getString(R.string.fast_exchange))){
            Router.navigation(new RouterFastSpeed());
        }else if(entity.getName().equals(getString(R.string.app_store))){
            Router.navigation(new RouterDynamitAppList());
        }else if(entity.getName().equals(getString(R.string.project_apply))){
            if(projectIdentificationEntity!=null&&projectIdentificationEntity.getCompanyName()!=null){
                Router.navigation(new RouterDynamicProjectIdentificationResult(projectIdentificationEntity));
            }else{
                Router.navigation(new RouterDynamicProjectIdentification());
            }
        }else if(entity.getName().equals(getString(R.string.game_hall))){
            if(gameGoEntity!=null){
                Router.navigation(new RouterDynamicWebView(gameGoEntity.getGameUrl(), false, entity.getName()));
            }
        }else if(entity.getName().equals(getString(R.string.otc_transcation))||entity.getName().equals(getString(R.string.dynamic_quotation))){
            showTips("敬请期待");
        }else if(entity.getName().equals(getString(R.string.dynamic_activity))){
            Router.navigation(new RouterDynamicShakyCenter());
        }else if(entity.getName().equals(getString(R.string.icon_zilong))){
            Router.navigation(new RouterDynamicWebView(gameGoEntity.getGameUrl(), false, entity.getName()));
        }else if(entity.getName().equals(getString(R.string.real_register))){
            Router.navigation(new RouterDynamicWebView(gameGoEntity.getGameUrl(), false, entity.getName()));
        }
    }
     
    @Override
    public void onTitleClick() {
        Router.navigation(new RouterDynamitAppList());
    }

    @Override
    public void onNoticeClick() {
        Router.navigation(new RouterDynamicNotice());
    }
}
