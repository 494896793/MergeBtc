package com.bochat.app.app.activity.bill;

import android.os.Bundle;
import android.support.v7.widget.GridLayoutManager;
import android.support.v7.widget.RecyclerView;

import com.alibaba.android.arouter.facade.annotation.Route;
import com.bochat.app.R;
import com.bochat.app.app.RouteTable;
import com.bochat.app.app.adapter.SelectCoinAdapter;
import com.bochat.app.common.contract.bill.TokenTransferSelectCoinContract;
import com.bochat.app.model.bean.UserCurrencyEntity;
import com.bochat.app.mvp.view.BaseActivity;

import java.util.ArrayList;
import java.util.List;

import javax.inject.Inject;

import butterknife.BindView;

/**
 * Author      : FJ
 * CreateDate  : 2019/4/26  17:40
 * Description : 选择资产
 */
@Route(path = RouteTable.MINE_TOKEN_TRANSFER_SELECT_COIN)
public class TokenTransferSelectCoinActivity extends BaseActivity<TokenTransferSelectCoinContract.Presenter> implements TokenTransferSelectCoinContract.View ,SelectCoinAdapter.OnItemOnClickListener{
    
    @Inject
    TokenTransferSelectCoinContract.Presenter presenter;

    @BindView(R.id.mine_token_transfer_coin_list)
    RecyclerView mRecycleView;
    
    private ArrayList<SelectToken> list = new ArrayList<>();
    
//    private SelectCoinAdapter<SelectToken> adapter;
    private  SelectCoinAdapter adapter;

    @Override
    protected void initInjector() {
        getActivityComponent().inject(this);
    }

    @Override
    protected TokenTransferSelectCoinContract.Presenter initPresenter() {
        return presenter;
    }

    @Override
    protected void setRootView(Bundle savedInstanceState) {
        setContentView(R.layout.activity_mine_token_transfer_select_coin);
    }
    
    @Override
    public void updateList(List<UserCurrencyEntity> data, UserCurrencyEntity selection) {
        list.clear();
        if(data != null && !data.isEmpty()){
            for(int i = 0; i < data.size(); i++){
                list.add(new SelectToken(data.get(i).getBid().equals(selection.getBid()), data.get(i)));
            }
        }
        adapter.notifyDataSetChanged();
    }


    public class SelectToken{
        private boolean isSelect;
        private UserCurrencyEntity token;

        public SelectToken(boolean isSelect, UserCurrencyEntity token) {
            this.isSelect = isSelect;
            this.token = token;
        }

        public boolean isSelect() {
            return isSelect;
        }

        public void setSelect(boolean select) {
            isSelect = select;
        }

        public UserCurrencyEntity getToken() {
            return token;
        }

        public void setToken(UserCurrencyEntity token) {
            this.token = token;
        }
    }
    
    @Override
    protected void initWidget() {
        //todo 自定义继承RecycleView的adapter
        adapter = new SelectCoinAdapter(this,list);
        mRecycleView.setLayoutManager(new GridLayoutManager(this,4,GridLayoutManager.VERTICAL,false));
        mRecycleView.setAdapter(adapter);

        //自定义点击事件


     /*   adapter = new CommonAdapter<SelectToken>(this, R.layout.item_mine_token_transfer_coin_tye, list) {
            @Override
            protected void convert(ViewHolder viewHolder, SelectToken item, int position) {
                viewHolder.setText(R.id.item_mine_token_transfer_coin_name, item.getToken().getbName());
                ImageView imageView = viewHolder.getView(R.id.item_mine_token_transfer_coin_icon);
                Glide.with(TokenTransferSelectCoinActivity.this).load(item.getToken().getbIamge()).into(imageView);
                viewHolder.setVisible(R.id.item_mine_token_transfer_coin_select, item.isSelect());
            }
        };
        mRecycleView.setAdapter(adapter);
        mRecycleView.setOnItemClickListener(new AdapterView.OnItemClickListener() {
            @Override
            public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
            //todo
             presenter.onItemClick(list.get(position).getToken());
            }
        });*/
    }


    @Override
    public void itemOnClick(int position) {
        presenter.onItemClick(list.get(position).getToken());
    }
}
