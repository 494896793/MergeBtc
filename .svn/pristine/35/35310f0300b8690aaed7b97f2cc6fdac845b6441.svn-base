package com.bochat.app.app.activity;

import android.Manifest;
import android.os.Bundle;
import android.os.Handler;
import android.support.annotation.Nullable;
import android.util.Log;
import android.view.View;
import android.widget.Button;

import com.alibaba.android.arouter.facade.annotation.Route;
import com.bochat.app.R;
import com.bochat.app.common.contract.SplashScreenContract;
import com.bochat.app.common.router.RouterSplashScreen;
import com.bochat.app.mvp.view.BaseActivity;
import com.tbruyelle.rxpermissions2.RxPermissions;

import javax.inject.Inject;

import butterknife.BindView;
import butterknife.OnClick;
import io.reactivex.functions.Consumer;

/**
 * Author      : FJ
 * CreateDate  : 2019/04/10 14:08
 * Description :
 */
@Route(path = RouterSplashScreen.PATH)
public class SplashScreenActivity extends BaseActivity<SplashScreenContract.Presenter> implements SplashScreenContract.View{

    @Inject
    SplashScreenContract.Presenter presenter;
    
    @BindView(R.id.splash_screen_skip_btn)
    Button button;
    
    @Inject
    RxPermissions rxPermissions;
    
    private Handler handler = new Handler();
    private boolean isSkip = false;

    @Override
    protected void initInjector() {
        getActivityComponent().inject(this);
    }

    @Override
    protected SplashScreenContract.Presenter initPresenter() {
        return presenter;
    }

    @Override
    protected void setRootView(Bundle savedInstanceState) {
        setContentView(R.layout.activity_splash_screen);
    }
    
    @Override
    @OnClick({R.id.splash_screen_skip_btn})
    protected void onViewClicked(View view) {
        skipSplashScreen();
    }


    @Override
    protected void onStart() {
        super.onStart();
        Log.i("============","===========star");
        requestPermissions();
    }

    @Override
    protected void onCreate(@Nullable Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
    }
    
    private void requestPermissions(){
        rxPermissions.request(Manifest.permission.READ_EXTERNAL_STORAGE, Manifest.permission.WRITE_EXTERNAL_STORAGE)
                .subscribe(new Consumer<Boolean>() {
                    @Override
                    public void accept(Boolean aBoolean) throws Exception {
                        if(!aBoolean){
                            finish();
                        } else {
                            countDown(2);
                        }
                    }
                });
    }
    
    private void skipSplashScreen(){
        isSkip = true;
        presenter.onSkipButtonClick();
    }
    
    private void countDown(final int seconds){
        handler.postDelayed(new Runnable() {
            @Override
            public void run() {
                if(isSkip){
                    return;
                }
                button.setText("跳过"+seconds+"s");
                if(seconds > 0){
                    countDown(seconds - 1);
                } else {
                    skipSplashScreen();
                }
            }
        }, 1000);
    }
}
