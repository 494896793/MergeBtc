package com.bochat.app.app.activity.dynamic;

import android.content.Context;
import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AdapterView;
import android.widget.BaseAdapter;
import android.widget.ImageView;
import android.widget.Spinner;
import android.widget.TextView;

import com.alibaba.android.arouter.facade.annotation.Route;
import com.bochat.app.R;
import com.bochat.app.app.activity.bill.QuickExchangeActivity;
import com.bochat.app.common.contract.dynamic.FastSpeedContract;
import com.bochat.app.model.bean.UserCurrencyEntity;
import com.bochat.app.mvp.view.BaseActivity;
import com.bochat.app.mvp.view.ResultTipsType;
import com.bumptech.glide.Glide;

import java.util.ArrayList;
import java.util.List;

import javax.inject.Inject;

import butterknife.BindView;

import static com.bochat.app.app.RouteTable.DYNAMIC_MAIN_FAST_SPEED;

/**
 * 2019/6/5
 * Author LDL
 **/
@Route(path = DYNAMIC_MAIN_FAST_SPEED)
public class FastSpeedActivity extends BaseActivity<FastSpeedContract.Presenter> implements FastSpeedContract.View {

    @Inject
    FastSpeedContract.Presenter presenter;

    @BindView(R.id.mine_quick_exchange_pay_spinner)
    Spinner paySpinner;

    @BindView(R.id.mine_quick_exchange_exchange_spinner)
    Spinner exchangeSpinner;

    UserCurrencyEntity pay;
    UserCurrencyEntity exchange;
    int paySelection;
    int exchangeSelection;
    ArrayList<UserCurrencyEntity> list = new ArrayList<>();
    FastSpeedActivity.SpinnerAdapter payAdapter;

    FastSpeedActivity.SpinnerAdapter exchangeAdapter;

    @Override
    protected void initInjector() {
        getActivityComponent().inject(this);
    }

    @Override
    protected FastSpeedContract.Presenter initPresenter() {
        return presenter;
    }

    @Override
    protected void setRootView(Bundle savedInstanceState) {
        setContentView(R.layout.activity_fastspeed);
    }

    @Override
    protected void initWidget() {
        super.initWidget();
        payAdapter = new SpinnerAdapter(this, list);
        paySpinner.setAdapter(payAdapter);
        paySpinner.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
            @Override
            public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                if(position == exchangeSelection){
                    showTips(new ResultTipsType("令牌不能相同", false));
                    paySpinner.setSelection(paySelection);
                    return;
                }
                pay = list.get(position);
                paySelection = position;
            }

            @Override
            public void onNothingSelected(AdapterView<?> parent) {
            }
        });

        exchangeAdapter = new SpinnerAdapter(this, list);
        exchangeSpinner.setAdapter(exchangeAdapter);
        exchangeSpinner.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
            @Override
            public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                if(position == paySelection){
                    showTips(new ResultTipsType("令牌不能相同", false));
                    exchangeSpinner.setSelection(exchangeSelection);
                    return;
                }
                exchange = list.get(position);
                exchangeSelection = position;
            }

            @Override
            public void onNothingSelected(AdapterView<?> parent) {
            }
        });
    }

    @Override
    public void updateCoinList(List<UserCurrencyEntity> data) {
        list.clear();
        if(data != null && !data.isEmpty()){
            list.addAll(data);
        }
        payAdapter.notifyDataSetChanged();
        exchangeAdapter.notifyDataSetChanged();
        if(data != null && data.size() >= 2){
            paySpinner.setSelection(0);
            paySelection = 0;
            exchangeSpinner.setSelection(1);
            exchangeSelection = 1;
        }
    }

    public class SpinnerAdapter extends BaseAdapter {

        private List<UserCurrencyEntity> mList;
        private Context mContext;

        public SpinnerAdapter(Context pContext, List<UserCurrencyEntity> pList) {
            this.mContext = pContext;
            this.mList = pList;
        }

        @Override
        public int getCount() {
            return mList.size();
        }

        @Override
        public Object getItem(int position) {
            return mList.get(position);
        }

        @Override
        public long getItemId(int position) {
            return position;
        }

        @Override
        public View getView(int position, View convertView, ViewGroup parent) {
            LayoutInflater _LayoutInflater=LayoutInflater.from(mContext);
            convertView = _LayoutInflater.inflate(R.layout.item_token, null);
            if(convertView!=null) {
                ImageView icon = convertView.findViewById(R.id.item_token_icon);
                Glide.with(FastSpeedActivity.this).load(mList.get(position).getbIamge()).into(icon);
                TextView text = convertView.findViewById(R.id.item_token_name);
                text.setText(mList.get(position).getbName());
            }
            return convertView;
        }
    }

}
