package com.bochat.app.app.activity;

import android.os.Build;
import android.os.Bundle;
import android.os.Handler;
import android.view.GestureDetector;
import android.view.KeyEvent;
import android.view.View;
import android.webkit.DownloadListener;
import android.webkit.WebSettings;
import android.webkit.WebView;
import android.webkit.WebViewClient;

import com.alibaba.android.arouter.facade.annotation.Route;
import com.bochat.app.R;
import com.bochat.app.app.RouteExtra;
import com.bochat.app.app.view.BoChatTopBar;
import com.bochat.app.app.view.ShareDialog;
import com.bochat.app.business.cache.CachePool;
import com.bochat.app.common.contract.dynamic.WebContract;
import com.bochat.app.model.bean.UserEntity;
import com.bochat.app.model.constant.Constan;
import com.bochat.app.model.util.ToastUtils;
import com.bochat.app.model.util.download.DownloadApk;
import com.bochat.app.model.util.download.MultiThreadDownload;
import com.bochat.app.mvp.view.BaseActivity;

import java.io.File;

import javax.inject.Inject;

import butterknife.BindView;

import static com.bochat.app.app.RouteExtra.WEB_LINK;
import static com.bochat.app.app.RouteExtra.WEB_TITLE;
import static com.bochat.app.app.RouteTable.DYNAMIC_MAIN;
import static com.bochat.app.model.constant.Constan.DIRPATH;
import static com.bochat.app.model.constant.Constan.SOON_FILE_DIR;


/**
 * 2019/5/8
 * Author LDL
 **/
@Route(path = DYNAMIC_MAIN)
public class WebActivity extends BaseActivity<WebContract.Presenter> implements WebContract.View, View.OnClickListener {

    private static final String SHARE_TITLE = "邀请有礼";
    private static final String SHARE_DESCRIPTION = "邀请链接 [点击复制] ";
    
    @Inject
    WebContract.Presenter presenter;

    @BindView(R.id.webview)
    WebView webview;

    @BindView(R.id.add_friend_top_bar)
    BoChatTopBar add_friend_top_bar;


    private boolean IsShareUrl;
    private String link;
    private String shareLink;
    private MultiThreadDownload threadDownload;
    private DownloadApk mDownloadApk;

    @Override
    protected void initInjector() {
        getActivityComponent().inject(this);
    }

    @Override
    protected void initWidget() {
        if(getIntent().getStringExtra(WEB_TITLE)!=null){
            add_friend_top_bar.setTitleText(getIntent().getStringExtra(WEB_TITLE));
        }else{
            add_friend_top_bar.setTitleText("");
        }
        add_friend_top_bar.setReturnBtListenner(this);
        initWebView();
        link=getIntent().getStringExtra(WEB_LINK);
        IsShareUrl = getIntent().getBooleanExtra(RouteExtra.IsShareUrl, true);
        
        if(IsShareUrl){
            UserEntity latest = CachePool.getInstance().loginUser().getLatest();
            String token = latest.getToken().substring(7);
            shareLink = link + "?code=" + latest.getInviteCode() + "&token="+ token +"&type=2";
            link = link + "?code=" + latest.getInviteCode() + "&token="+ token +"&type=1";
        }else{
            add_friend_top_bar.getExtBtn2().setVisibility(View.GONE);
        }
        if(link!=null){

            webview.loadUrl(link);
            webview.setDownloadListener(new DownloadListener() {
                @Override
                public void onDownloadStart(String url, String userAgent, String contentDisposition, String mimetype, long contentLength) {
                    try{
                        initFileDir();
                        mDownloadApk = new DownloadApk.Builder()
                                .context(WebActivity.this)
                                .dynamicReceiver()
                                .setDownloadUrl(url)
                                .forceUpdate(false)
                                .setName("BoChat下载")
                                .setDescriptions("")
                                .setOnDownloadApkListener(new DownloadApk.Builder.SimpleDownloadApkListener() {
                                    @Override
                                    public void onDownloadCompleted() {
                                        DownloadApk.install(WebActivity.this);
                                    }
                                })
                                .build();
                        mDownloadApk.startDownload();
//                        threadDownload=new MultiThreadDownload(new Handler(),url , DIRPATH + Constan.SOON_FILE_DIR, Constan.APK_NAME, WebActivity.this);
//                        threadDownload.start();
                        ToastUtils.s(WebActivity.this,"开始下载...");
                    }catch (Exception e){
                        e.printStackTrace();
                    }
                }
            });
        }

        add_friend_top_bar.setOnClickListener(new BoChatTopBar.OnClickListener() {
            @Override
            public void onRightExtButtonClick() {
                
                
                ShareDialog shareDialog = new ShareDialog(WebActivity.this, SHARE_TITLE, SHARE_DESCRIPTION, shareLink);
                shareDialog.showPopupWindow();
            }
        });
    }

    private void initFileDir(){
        try{
            File file=new File(DIRPATH);
            if(!file.exists()){
                file.mkdir();
            }
            File file1=new File(DIRPATH+SOON_FILE_DIR);
            if(!file1.exists()){
                file1.mkdir();
            }
        }catch (Exception e){
            e.printStackTrace();
        }
    }

    private void initWebView(){
        WebSettings webSettings = webview.getSettings();
        // 同一个页面有时会出现http和https两种证书，导致部分页面加载不出来
        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.N) {
            webSettings.setMixedContentMode(WebSettings.MIXED_CONTENT_ALWAYS_ALLOW);
        }

        webSettings.setAppCacheEnabled(true);//是否使用缓存
        webSettings.setUserAgentString(webSettings.getUserAgentString()+" 776_Android");
        webSettings.setJavaScriptEnabled(true);//是否允许执行js，默认为false。设置true时，会提醒可能造成XSS漏洞
        webSettings.setUseWideViewPort(true);//设置此属性，可任意比例缩放。大视图模式
        webSettings.setLayoutAlgorithm(WebSettings.LayoutAlgorithm.NORMAL);
        webSettings.setLoadWithOverviewMode(true);//和setUseWideViewPort(true)一起解决网页自适应问题
        webSettings.setAppCachePath("/data/data/"+this.getPackageName()+"/cache");
        webSettings.setCacheMode(WebSettings.LOAD_DEFAULT);
        webSettings.setDomStorageEnabled(true);//DOM St

        webSettings.setJavaScriptCanOpenWindowsAutomatically(true);//设置js可以直接打开窗口，如window.open()，默认为false
        webSettings.setSupportZoom(true);//是否可以缩放，默认true
        webSettings.setBuiltInZoomControls(true);//是否显示缩放按钮，默认false

        webview.setWebViewClient(new WebViewClient(){
            @Override
            public boolean shouldOverrideUrlLoading(WebView view, String url) {
                view.loadUrl(url);
                return true;
            }
        });
    }

    @Override
    protected WebContract.Presenter initPresenter() {
        return presenter;
    }

    @Override
    protected void setRootView(Bundle savedInstanceState) {
        setContentView(R.layout.activity_webview);
    }

    @Override
    public boolean onKeyDown(int keyCode, KeyEvent event) {
        if (keyCode == KeyEvent.KEYCODE_BACK && webview.canGoBack()) {
            webview.goBack();
            return true;
        }
        return super.onKeyDown(keyCode, event);
    }

    @Override
    protected void onSaveInstanceState(Bundle icicle) {
        super.onSaveInstanceState(icicle);
        webview.saveState(icicle);
    }

    @Override
    public void onClick(View v) {
        switch (v.getId()){
            case R.id.top_bar_back_layout:
                if(webview.canGoBack()){
                    webview.goBack();
                }else{
                    finish();
                }
                break;
        }
    }
}
