package com.bochat.app.app.activity.bill;

import android.os.Bundle;
import android.text.TextUtils;
import android.view.View;
import android.widget.EditText;
import android.widget.TextView;

import com.alibaba.android.arouter.facade.annotation.Route;
import com.bochat.app.R;
import com.bochat.app.app.RouteTable;
import com.bochat.app.app.util.MoneyInputLimit;
import com.bochat.app.app.util.SoftKeyboardUtil;
import com.bochat.app.app.view.PayPasswordDialog;
import com.bochat.app.app.view.TextListDialog;
import com.bochat.app.common.contract.bill.PropertyCashOutContract;
import com.bochat.app.model.bean.BankCard;
import com.bochat.app.mvp.view.BaseActivity;

import java.util.List;

import javax.inject.Inject;

import butterknife.BindView;
import butterknife.OnClick;
import butterknife.OnTextChanged;

/**
 * Author      : FJ
 * CreateDate  : 2019/4/26  16:07
 * Description : 零钱提现
 */
@Route(path = RouteTable.MINE_PROPERTY_CASH_OUT)
public class PropertyCashOutActivity extends BaseActivity<PropertyCashOutContract.Presenter> implements PropertyCashOutContract.View {
    @Inject
    PropertyCashOutContract.Presenter presenter;

    @BindView(R.id.mine_property_cash_out_select_bank_card_id)
    TextView bankCardId;
    @BindView(R.id.mine_property_cash_out_amount)
    EditText amountInput;
    @BindView(R.id.mine_property_cash_out_charge)
    TextView chargeAmount;
    @BindView(R.id.mine_property_cash_out_real_amount)
    TextView realAmount;
    @BindView(R.id.mine_property_cash_out_money)
    TextView money;
    
    private TextListDialog bankCardDialog;
    private PayPasswordDialog payPasswordDialog;
    
    private int chooseBankCardPosition = 0;
    
    List<BankCard> list;

    BankCard currentBankCard;
    
    @Override
    protected void initInjector() {
        getActivityComponent().inject(this);
    }

    @Override
    protected PropertyCashOutContract.Presenter initPresenter() {
        return presenter;
    }

    @Override
    protected void setRootView(Bundle savedInstanceState) {
        setContentView(R.layout.activity_mine_property_cash_out);
    }

    @OnClick({R.id.mine_property_cash_out_select_bank_card, R.id.mine_property_cash_out_max, 
            R.id.mine_property_cash_out_enter_btn})
    @Override
    protected void onViewClicked(View view) {
        super.onViewClicked(view);
        switch (view.getId()) {
            case R.id.mine_property_cash_out_select_bank_card:
                showSelectBankCardDialog();
            break;
            case R.id.mine_property_cash_out_max:
                presenter.onAmountMaxClick();
            break;
            case R.id.mine_property_cash_out_enter_btn:
                showPayPasswordDialog();
            break;
        
            default:
                break;
        }
    }

    @Override
    protected void initWidget() {
        amountInput.addTextChangedListener(new MoneyInputLimit(amountInput).setDigits(2));
        amountInput.setSelection(amountInput.getText().toString().length());
    }

    @OnTextChanged(value = R.id.mine_property_cash_out_amount, callback = OnTextChanged.Callback.TEXT_CHANGED)
    void onTextChanged(CharSequence s, int start, int before, int count) {
        double num = 0.0f;
        if(!TextUtils.isEmpty(s.toString())){
            num = Double.valueOf(s.toString());
        }
        realAmount.setText("￥" + String.format("%.2f", num * 0.95f));
        chargeAmount.setText("￥" + String.format("%.2f", num * 0.05f));
    }
    
    private void showSelectBankCardDialog(){
        if(bankCardDialog != null){
            bankCardDialog.showPopupWindow();
        }
    }
    
    private void showPayPasswordDialog(){
        payPasswordDialog = new PayPasswordDialog(this, "￥" + amountInput.getText().toString());
        payPasswordDialog.setOnEnterListener(new PayPasswordDialog.OnEnterListener() {
            @Override
            public void onEnter(String password) {
                presenter.onEnterClick(currentBankCard, password, amountInput.getText().toString());
            }
        });
        SoftKeyboardUtil.hideSoftKeyboard(this);
        payPasswordDialog.showPopupWindow();
    }
    
    @Override
    public void setBankList(List<BankCard> list) {
        this.list = list;
        
        currentBankCard = list.get(0);
        chooseBankCardPosition = 0;
        bankCardId.setText(currentBankCard.getName()+"("+currentBankCard.getBankNo().substring(currentBankCard.getBankNo().length() - 4)+")");
        
        bankCardDialog = new TextListDialog(this, "请选择到账银行卡", list, chooseBankCardPosition);
        bankCardDialog.setOnChooseListener(new TextListDialog.OnChooseListener() {
            @Override
            public void onChoose(int position, BankCard content) {
                currentBankCard = content;
                chooseBankCardPosition = position;
                bankCardId.setText(currentBankCard.getName()+"("+currentBankCard.getBankNo().substring(currentBankCard.getBankNo().length() - 4)+")");
            }
        });
    }

    @Override
    public void updateAmountInput(String text) {
        amountInput.setText(String.format("%.2f",Double.valueOf(text)));
        realAmount.setText("￥" + String.format("%.2f", Double.valueOf(text) * 0.95f));
        chargeAmount.setText("￥" + String.format("%.2f", Double.valueOf(text) * 0.05f));
    }

    @Override
    public void updateChargeAmount(String text) {
        chargeAmount.setText("￥"+text);
    }

    @Override
    public void updateRealAmount(String text) {
        realAmount.setText("￥"+text);
    }

    @Override
    public void updateBankCardAmount(String text) {
        money.setText("￥"+text);
    }
}
