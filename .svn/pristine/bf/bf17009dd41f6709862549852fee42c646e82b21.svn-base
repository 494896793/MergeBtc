package com.bochat.app.app.activity.bill;

import android.os.Bundle;
import android.text.TextUtils;
import android.view.View;
import android.widget.EditText;
import android.widget.RelativeLayout;
import android.widget.TextView;

import com.alibaba.android.arouter.facade.annotation.Route;
import com.alibaba.android.arouter.launcher.ARouter;
import com.bochat.app.R;
import com.bochat.app.app.RouteExtra;
import com.bochat.app.app.RouteTable;
import com.bochat.app.app.util.MoneyInputLimit;
import com.bochat.app.app.util.SoftKeyboardUtil;
import com.bochat.app.app.view.BoChatTopBar;
import com.bochat.app.app.view.PayPasswordDialog;
import com.bochat.app.common.contract.bill.TokenTransferContract;
import com.bochat.app.model.bean.OutPromptDataEntity;
import com.bochat.app.model.bean.UserCurrencyEntity;
import com.bochat.app.mvp.view.BaseActivity;
import com.bochat.app.mvp.view.ResultTipsType;

import javax.inject.Inject;

import butterknife.BindView;
import butterknife.OnClick;
import butterknife.OnTextChanged;

/**
 * Author      : FJ
 * CreateDate  : 2019/4/26  17:40
 * Description : 划转
 */
@Route(path = RouteTable.MINE_TOKEN_TRANSFER)
public class TokenTransferActivity extends BaseActivity<TokenTransferContract.Presenter> implements TokenTransferContract.View {

    @Inject
    TokenTransferContract.Presenter presenter;

    @BindView(R.id.mine_token_transfer_top_bar)
    BoChatTopBar boChatTopBar;

    @BindView(R.id.mine_token_transfer_select_layout)
    RelativeLayout selectLayout; //由主界面币种跳转过来时不显示选择币种

    @BindView(R.id.mine_token_transfer_selected_coin)
    TextView selectedCoinType;

    @BindView(R.id.mine_token_transfer_coin_type)
    TextView coinType;

    @BindView(R.id.mine_token_transfer_address)
    EditText coinAddress;

    @BindView(R.id.mine_token_transfer_amount_min)
    TextView amountMin; //最小金额

    @BindView(R.id.mine_token_transfer_amount_mine)
    TextView amountMine;//我的余额

    @BindView(R.id.mine_token_transfer_amount_charge)
    TextView amountCharge;//手续费
    
    @BindView(R.id.mine_token_transfer_amount_real)
    TextView amountReal;//实际到账

    @BindView(R.id.mine_token_transfer_amount_input)
    EditText amountInput;

    @Override
    protected void initInjector() {
        getActivityComponent().inject(this);
    }

    @Override
    protected TokenTransferContract.Presenter initPresenter() {
        return presenter;
    }

    @Override
    protected void setRootView(Bundle savedInstanceState) {
        setContentView(R.layout.activity_mine_token_transfer);
    }

    @Override
    protected void initWidget() {
        super.initWidget();
        amountInput.addTextChangedListener(new MoneyInputLimit(amountInput).setDigits(8));
    }

    @OnClick({R.id.mine_token_transfer_select_coin_btn,R.id.mine_token_transfer_amount_max, R.id.mine_token_transfer_enter_btn, R.id.mine_token_transfer_address_scan})
    @Override
    protected void onViewClicked(View view) {
        super.onViewClicked(view);

        switch (view.getId()) {
            case R.id.mine_token_transfer_select_coin_btn:
                presenter.onChooseClick();
                break;
            case R.id.mine_token_transfer_amount_max:
                presenter.onMaxAmountClick();
                break;
            case R.id.mine_token_transfer_enter_btn:
                if(TextUtils.isEmpty(amountInput.getText().toString()) || (Double.valueOf(amountInput.getText().toString()) == 0.0f)){
                    showTips(new ResultTipsType("发送数量不能为空", false));
                    return;
                }
                PayPasswordDialog dialog = new PayPasswordDialog(this, amountInput.getText().toString()+""+coinType.getText());
                dialog.setOnEnterListener(new PayPasswordDialog.OnEnterListener() {
                    @Override
                    public void onEnter(String password) {
                        presenter.onEnterClick(amountInput.getText().toString(), coinAddress.getText().toString(), password, bId);
                    }
                });
                SoftKeyboardUtil.hideSoftKeyboard(this);
                dialog.showPopupWindow();
                break;
            case R.id.mine_token_transfer_address_scan:
                ARouter.getInstance().build(RouteTable.SCAN_QR_CODE).withString(RouteExtra.ReturnUrl, RouteTable.MINE_TOKEN_TRANSFER).navigation();
                break;
            default:
                break;
        }
    }

    @OnTextChanged(value = R.id.mine_token_transfer_amount_input, callback = OnTextChanged.Callback.TEXT_CHANGED)
    void onTextChanged(CharSequence s, int start, int before, int count) {
        double real = 0.0f;
        if(!TextUtils.isEmpty(s.toString())){
            real = Double.valueOf(s.toString()) - feilv;
        }
        amountReal.setText("实际到账：" + String.format("%.8f", real > 0.0f ? real : 0.0f) + name);
    }
    
    private String name;
    private double feilv;
    private int bId;
    
    @Override
    public void updateList(UserCurrencyEntity info, OutPromptDataEntity entity) {
        String bName = info.getbName();
        coinType.setText(bName);
        selectedCoinType.setText(bName);
        amountMin.setText( "提币最小量：" + String.format("%.8f", entity.getData().getMin()) + bName);
        amountMine.setText("当前可用：" + String.format("%.8f", entity.getData().getResidueAmount()) + bName);
        boChatTopBar.setTitleText("发送" + bName);
        feilv = entity.getData().getFl();
        name = bName;
        bId = Integer.valueOf(info.getBid());
        amountCharge.setText("矿工费：" + String.format("%.8f", feilv) + name);
        amountReal.setText("实际到账：" + String.format("%.8f", 0.0f) + name);
    }

    @Override
    public void setSendAmount(String text) {
        amountInput.setText(text);
        amountCharge.setText("矿工费：" + String.format("%.8f", feilv) + name);
        double real = Double.valueOf(text) - feilv;
        amountReal.setText("实际到账：" + String.format("%.8f", real > 0.0f ? real : 0.0f) + name);
    }

    @Override
    public void setAddress(String address) {
        coinAddress.setText(address);
    }
}

